{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","vodaLat","vodaLong","vodaName","useState","long","setLong","lat","setLat","setErr","useEffect","findPosition","navigator","geolocation","getCurrentPosition","position","console","log","coords","latitude","toString","longitude","error","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","locationError","timeout","maximumAge","enableHighAccuracy","className","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAAe,I,YCyFAA,MAxEf,WACE,IAAMC,EAAU,cACVC,EAAW,aACXC,EAAW,8BAEjB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAAsBJ,mBAAS,IAA/B,mBAAYK,GAAZ,WACAC,qBAAU,WACRC,MACA,IAEF,IAAMA,EAAe,WACnBC,UAAUC,YAAYC,oBAAmB,SAAAC,GACvCC,QAAQC,IAAIF,GACZP,EAAOO,EAASG,OAAOC,SAASC,YAChCd,EAAQS,EAASG,OAAOG,UAAUD,eACjC,SAAAE,GACCb,EAyCR,SAAuBa,GACrB,OAAQA,EAAMC,MACZ,KAAKD,EAAME,kBACT,MAAO,2CACT,KAAKF,EAAMG,qBACT,MAAO,iDACT,KAAKH,EAAMI,QACT,MAAO,uCACT,KAAKJ,EAAMK,cACT,MAAO,8BAlDEC,CAAcN,IACrBN,QAAQM,MAAMA,KACf,CACDO,QAAS,IACTC,WAAY,IACZC,oBAAoB,KAIxB,OACE,qBAAKC,UAAU,MAAf,SACE,gCACE,gDACA,uCACA,mBAAGC,KAAK,wBAAR,4BACA,uBACA,uCACA,mBAAGA,KAAK,iBAAR,wBACA,uBACA,6CACA,mBACEA,KAAI,6CAAwC9B,EAAxC,aAAqDF,EAArD,YAAgEC,EAAhE,QADN,8BAKA,uBACA,4CACA,mBACE+B,KAAI,6CACqB9B,EADrB,gBACqCF,EADrC,YACgDC,EADhD,aADN,6BAMA,uBACA,8CACE,sCAASK,EAAT,WAAsBF,WC1DjB6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6309f16d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n\r\nfunction mapsSelector() {\r\n  if (\r\n    /* if we're on iOS, open in Apple Maps */\r\n    navigator.platform.indexOf(\"iPhone\") != -1 ||\r\n    navigator.platform.indexOf(\"iPad\") != -1 ||\r\n    navigator.platform.indexOf(\"iPod\") != -1\r\n  )\r\n    window.open(\"maps://maps.google.com/maps?daddr=<lat>,<long>&amp;ll=\");\r\n  /* else use Google */ else\r\n    window.open(\"https://maps.google.com/maps?daddr=<lat>,<long>&amp;ll=\");\r\n}\r\n\r\nfunction App() {\r\n  const vodaLat = \"-33.8913753\";\r\n  const vodaLong = \"18.5129694\";\r\n  const vodaName = \"Entelect - Cape Town Office\";\r\n\r\n  const [long, setLong] = useState(\"\");\r\n  const [lat, setLat] = useState(\"\");\r\n  const [err, setErr] = useState(\"\");\r\n  useEffect(() => {\r\n    findPosition();\r\n  },[]);\r\n  \r\n  const findPosition = () => {\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      console.log(position);\r\n      setLat(position.coords.latitude.toString())\r\n      setLong(position.coords.longitude.toString())\r\n    }, error => {\r\n        setErr(locationError(error))\r\n        console.error(error)\r\n    }, {\r\n      timeout: 2000,\r\n      maximumAge: 20000,\r\n      enableHighAccuracy: true\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <h1>Testing stuffs</h1>\r\n        <h3>Email</h3>\r\n        <a href=\"mailto:test@gmail.com\">test@gmail.com</a>\r\n        <hr />\r\n        <h3>Phone</h3>\r\n        <a href=\"tel:0831231231\">0831231231</a>\r\n        <hr />\r\n        <h3>Google maps</h3>\r\n        <a\r\n          href={`https://www.google.com/maps/search/${vodaName}/@${vodaLat},${vodaLong},15z`}\r\n        >\r\n          Open Google maps\r\n        </a>\r\n        <hr />\r\n        <h3>Apple maps</h3>\r\n        <a\r\n          href={`\r\n        http://maps.apple.com/?q=${vodaName}&sll=${vodaLat},${vodaLong}&z=10&t=s`}\r\n        >\r\n          Open Apple maps\r\n        </a>\r\n        <hr />\r\n        <h3>Get Location</h3>\r\n          <p>Lat: {lat} : Lng: {long}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction locationError(error) {\r\n  switch (error.code) {\r\n    case error.PERMISSION_DENIED:\r\n      return \"User denied the request for geolocation.\";\r\n    case error.POSITION_UNAVAILABLE:\r\n      return \"Location information is currently unavailable.\";\r\n    case error.TIMEOUT:\r\n      return \"Request for user location timed out.\";\r\n    case error.UNKNOWN_ERROR:\r\n      return \"An unknown error occurred.\";\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}